{"ast":null,"code":"import { Streamlit } from \"streamlit-component-lib\";\n\n// Add text and a button to the DOM. (You could also add these directly\n// to index.html.)\nvar head = document.getElementsByTagName('HEAD')[0];\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.type = 'text/css';\nlink.href = 'st-circular-progress/frontend/public/progres.css';\nhead.appendChild(link);\nconst container = document.body.appendChild(document.createElement(\"div\"));\ncontainer.className = \"progress-bar-container\";\nconst header = container.appendChild(document.createElement(\"h3\"));\nconst header_text = header.appendChild(document.createTextNode(\"\"));\nconst progress_bar = container.appendChild(document.createElement(\"div\"));\nprogress_bar.className = \"progress-bar html\";\nprogress_bar.appendChild(document.createElement(\"progress\"));\nprogress_bar.id = \"html\";\nprogress_bar.setAttribute(\"min\", \"0\");\nprogress_bar.setAttribute(\"max\", \"100\");\nprogress_bar.setAttribute(\"value\", \"25\");\nfunction onRender(event) {\n  // Get the RenderData from the event\n  const data = event.detail;\n  if (data.theme) {}\n  let header_txt = data.args[\"header\"];\n  let progress_value = data.args[\"value\"];\n  // Show \"Hello, name!\" with a non-breaking space afterwards.\n  header_text.textContent = `Hello, ${name}! ` + String.fromCharCode(160);\n  Streamlit.setFrameHeight(350);\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender);\nStreamlit.setComponentReady();\nStreamlit.setFrameHeight(5000);","map":{"version":3,"names":["Streamlit","head","document","getElementsByTagName","link","createElement","rel","type","href","appendChild","container","body","className","header","header_text","createTextNode","progress_bar","id","setAttribute","onRender","event","data","detail","theme","header_txt","args","progress_value","textContent","name","String","fromCharCode","setFrameHeight","events","addEventListener","RENDER_EVENT","setComponentReady"],"sources":["/Users/cserrano/Documents/Streamlit-Local/sqlinsights/streamlit-circular-progress/st-circular-progress/frontend/src/index.tsx"],"sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\n\n// Add text and a button to the DOM. (You could also add these directly\n// to index.html.)\nvar head = document.getElementsByTagName('HEAD')[0];\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.type = 'text/css';\nlink.href = 'st-circular-progress/frontend/public/progres.css';\nhead.appendChild(link);\nconst container = document.body.appendChild(document.createElement(\"div\"))\ncontainer.className = \"progress-bar-container\"\nconst header = container.appendChild(document.createElement(\"h3\"))\nconst header_text = header.appendChild(document.createTextNode(\"\"))\nconst progress_bar = container.appendChild(document.createElement(\"div\"))\nprogress_bar.className = \"progress-bar html\"\nprogress_bar.appendChild(document.createElement(\"progress\"))\nprogress_bar.id = \"html\"\nprogress_bar.setAttribute(\"min\", \"0\")\nprogress_bar.setAttribute(\"max\", \"100\")\nprogress_bar.setAttribute(\"value\", \"25\")\n\n\n\nfunction onRender(event: Event): void {\n  // Get the RenderData from the event\n  const data = (event as CustomEvent<RenderData>).detail\n  if (data.theme) {\n\n  }\n  let header_txt = data.args[\"header\"]\n  let progress_value = data.args[\"value\"]\n  // Show \"Hello, name!\" with a non-breaking space afterwards.\n  header_text.textContent = `Hello, ${name}! ` + String.fromCharCode(160)\n  Streamlit.setFrameHeight(350)\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\nStreamlit.setComponentReady()\nStreamlit.setFrameHeight(5000)\n"],"mappings":"AAAA,SAASA,SAAS,QAAoB,yBAAyB;;AAE/D;AACA;AACA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnD,IAAIC,IAAI,GAAGF,QAAQ,CAACG,aAAa,CAAC,MAAM,CAAC;AACzCD,IAAI,CAACE,GAAG,GAAG,YAAY;AACvBF,IAAI,CAACG,IAAI,GAAG,UAAU;AACtBH,IAAI,CAACI,IAAI,GAAG,kDAAkD;AAC9DP,IAAI,CAACQ,WAAW,CAACL,IAAI,CAAC;AACtB,MAAMM,SAAS,GAAGR,QAAQ,CAACS,IAAI,CAACF,WAAW,CAACP,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1EK,SAAS,CAACE,SAAS,GAAG,wBAAwB;AAC9C,MAAMC,MAAM,GAAGH,SAAS,CAACD,WAAW,CAACP,QAAQ,CAACG,aAAa,CAAC,IAAI,CAAC,CAAC;AAClE,MAAMS,WAAW,GAAGD,MAAM,CAACJ,WAAW,CAACP,QAAQ,CAACa,cAAc,CAAC,EAAE,CAAC,CAAC;AACnE,MAAMC,YAAY,GAAGN,SAAS,CAACD,WAAW,CAACP,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC,CAAC;AACzEW,YAAY,CAACJ,SAAS,GAAG,mBAAmB;AAC5CI,YAAY,CAACP,WAAW,CAACP,QAAQ,CAACG,aAAa,CAAC,UAAU,CAAC,CAAC;AAC5DW,YAAY,CAACC,EAAE,GAAG,MAAM;AACxBD,YAAY,CAACE,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC;AACrCF,YAAY,CAACE,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;AACvCF,YAAY,CAACE,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC;AAIxC,SAASC,QAAQA,CAACC,KAAY,EAAQ;EACpC;EACA,MAAMC,IAAI,GAAID,KAAK,CAA6BE,MAAM;EACtD,IAAID,IAAI,CAACE,KAAK,EAAE,CAEhB;EACA,IAAIC,UAAU,GAAGH,IAAI,CAACI,IAAI,CAAC,QAAQ,CAAC;EACpC,IAAIC,cAAc,GAAGL,IAAI,CAACI,IAAI,CAAC,OAAO,CAAC;EACvC;EACAX,WAAW,CAACa,WAAW,GAAI,UAASC,IAAK,IAAG,GAAGC,MAAM,CAACC,YAAY,CAAC,GAAG,CAAC;EACvE9B,SAAS,CAAC+B,cAAc,CAAC,GAAG,CAAC;AAC/B;;AAEA;AACA/B,SAAS,CAACgC,MAAM,CAACC,gBAAgB,CAACjC,SAAS,CAACkC,YAAY,EAAEf,QAAQ,CAAC;AACnEnB,SAAS,CAACmC,iBAAiB,CAAC,CAAC;AAC7BnC,SAAS,CAAC+B,cAAc,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}